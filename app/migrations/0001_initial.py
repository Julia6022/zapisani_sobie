# Generated by Django 4.2 on 2023-05-24 16:57

import app.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(blank=True, max_length=150, unique=True)),
                ('email', models.EmailField(blank=True, max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('sex', models.CharField(blank=True, choices=[('W', 'Kobieta'), ('M', 'Mężczyzna'), ('O', 'Inne')], max_length=1)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', app.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('movies_series', 'Filmy/seriale'), ('music', 'Muzyka'), ('singing', 'Śpiewanie'), ('dancing', 'Taniec'), ('books', 'Książki'), ('poetics', 'Poezja'), ('photography', 'Fotografia'), ('painting_drawing', 'Malowanie/rysowanie'), ('art', 'Sztuka'), ('theater', 'Teatr'), ('learning_languages', 'Nauka języków'), ('cooking_baking', 'Gotowanie/pieczenie'), ('traveling', 'Podróżowanie'), ('swimming', 'Pływanie'), ('cycling', 'Jazda na rowerze'), ('skiing_snowboarding', 'Narty/snowboard'), ('football', 'Piłka nożna'), ('basketball', 'Koszykówka'), ('volleyball', 'Siatkówka'), ('tennis', 'Tenis'), ('other_sport', 'Inny sport')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SexPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('W', 'Kobiety'), ('M', 'Mężczyzni'), ('O', 'Inni'), ('A', 'Wszyscy')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('education', models.CharField(blank=True, max_length=200)),
                ('job', models.CharField(blank=True, max_length=200)),
                ('bio', models.CharField(blank=True, max_length=500)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('profile_pic', models.ImageField(default='profile_pics/default.jpeg', upload_to=app.models.user_directory_path)),
                ('languages', models.CharField(blank=True, max_length=200)),
                ('min_age', models.IntegerField(blank=True, null=True)),
                ('max_age', models.IntegerField(blank=True, null=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('interests', models.ManyToManyField(blank=True, to='app.interest')),
                ('sex_preference', models.ManyToManyField(blank=True, to='app.sexpreference')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=80)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('body', models.TextField()),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='app.conversation')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
